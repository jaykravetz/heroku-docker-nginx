server {
    listen ${PORT} default_server;
    server_name _;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # Something deeper in the stack returns a redirect to /app1/ from /app1, but with the wrong port. So let's catch it before it happens and redirect to the correct location
    location = /app1 {
        return 301 $scheme://$http_host$request_uri/;
    }

    location /app1/ {
        # This IP setup currently does not work, because Heroku router before the target app modifies the X-Forwarded-For header
        # We might need to modify the Rails app to just use CLIENT_IP header and skip the X-Forwarded-For check
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header CLIENT_IP $remote_addr; # rails midlleware uses it to pick the correct IP from X-Forwarded-For

        proxy_pass ${APP1_URL};

        # If we change host, Heroku won't recognize the app we're requesting. So we can't use this directive
        # proxy_set_header Host $host;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
